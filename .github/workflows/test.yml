name: Tests
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["*"]
jobs:
  # Run "pre-commit run --all-files"
  pre-commit:
    runs-on: ubuntu-20.04
    timeout-minutes: 2

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # ref: https://github.com/pre-commit/action
      - uses: pre-commit/action@v2.0.0
      - name: Help message if pre-commit fail
        if: ${{ failure() }}
        run: |
          echo "You can install pre-commit hooks to automatically run formatting"
          echo "on each commit with:"
          echo "    pre-commit install"
          echo "or you can run by hand on staged files with"
          echo "    pre-commit run"
          echo "or after-the-fact on already committed files with"
          echo "    pre-commit run --all-files"

  check-links:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
      - name: Install the Python dependencies
        run: |
          pip install -e .[test] codecov
      - name: Cache checked links
        uses: actions/cache@v2
        with:
          path: ~/.cache/pytest-link-check
          key: ${{ runner.os }}-linkcheck-${{ hashFiles('**/*.md') }}-md-links
          restore-keys: |
            ${{ runner.os }}-linkcheck-
      - name: Install the Python dependencies
        run: |
          pip install -e .[test] codecov
      - name: Check Links
        uses: ./.github/actions/check-links

  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows, macos]
        python-version: ["3.7", "3.9"]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      - run: git --version
      - name: Upgrade packaging dependencies
        run: |
          pip install --upgrade pip setuptools wheel --user
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
      - name: Install the Python dependencies
        run: |
          pip install -e .[test] codecov
      - name: List installed packages
        run: |
          pip freeze
          pip check
      - name: Run the tests with coverage on Ubuntu
        if: ${{ matrix.os == 'ubuntu' }}
        run: |
          echo "yeah"
      - name: Run the tests on Windows and macOS
        if: ${{ matrix.os != 'ubuntu' }}
        run: |
          pytest -vv -s
      - name: Verify the Generate Changelog Action
        if: ${{ matrix.os == 'ubuntu' }}
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RH_REPOSITORY: jupyter-server/jupyter_releaser
          RH_BRANCH: master
          RH_SINCE: v0.3.0
          INPUT_UNTIL: v0.4.0
        run: |
          set -eux
          python -m jupyter_releaser.actions.generate-changelog
          cat CHANGELOG_ENTRY.md
          # Check for version entry in between the two versions and one outside
          cat CHANGELOG_ENTRY.md | grep -q "#95"
          cat CHANGELOG_ENTRY.md | grep -q "compare/v0.3.3...v0.4.0"
      - name: Coverage
        run: |
          codecov
